===================== GIT CONFIGURATION COMMANDS ===================
git config --list


====================================================================

===================== Authenticatoin Using PAT (Personal Access Tokens)=========
git config --global credential.helper cache (for storing PAT)
now use any of the command that requires authenticatoin... it will store PAT

================================================================================
===================== GIT REMOTE ===================
git remote
git remote add origin https://github.com/waqcas/curran.git

git remote remove origin
====================================================================


===================== GIT FETCH ===================
git fetch <remote> <branch>
git fetch origin master
git fetch https://github.com/waqcas/curran.git 30.drop-down
====================================================================

===================== GIT CLONE ===================
git clone -b 30.drop-down https://github.com/waqcas/curran.git
git clone --branch 30.drop-down https://github.com/waqcas/curran.git
====================================================================

===================== GIT PUSH ===================
git push <origin> <remote_branch_name>
====================================================================

===================== DEALING WITH UNTRACKED FILES ===================
git resote ./src/index.js     ---> restore local changes
git clean -fd                 ---> remove files/folders - restore local changes

git clean -f [-f force.. git will not warn]
git clean -n [git will ask before deletion]
====================================================================

===================== UNSTAGING FILES ==============================
git reset fileName.txt
git reset .
============================================================
===================== UNSTAGING FILES & CLEANING WORKING DIRECTORY =============
git reset --hard
================================================================================

==================== RESET vs REVERT ===========================================
RESET IS USED AFTER [ git add . ] BUT BEFORE COMMIT.
REVERT IS USED AFTER COMMIT.
REVERT DOES NOT DELETE COMMIT .. 
IN REVERT VERSION CONTROL MOVES FORWARD WHILE HISTORY MOVES BACKWARD.
REVERT GENERATES NEW COMMIT ID..
================================================================================


git --version
git init
git ls-files (to view files in statging area)
git add file2
git commit -m
git status (for working area/staging area)
git commit -am (skip staging area)
git rm file2.txt (removes file from local as well as staging area)
git mv file2.txt file1.txt
.gitignore
git status -s (short status)


//Diff
git diff --staged
git diff


===================== GIT HISTORY ===================
git log
git log --oneline
git log --oneline --reverse
git log --oneline -3[last 3]
git log --author="waqas"
====================================================================



//restore to an earlier version
git restore --source=HEAD file.js


//view a commit
git show d60190
git show HEAD
git show HEAD~1
git show HEAD:abc.txt


//files involoved in particular commit
git ls-tree HEAD


//unstaging files
git resotre --staged file2.txt


//discards local changed
git resotre file1.js
git clean -fd





